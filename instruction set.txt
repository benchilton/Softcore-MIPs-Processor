Instruction formats:
R Type:|opcode (6)|rs (5)|rt (5)|rd (5)|shamt (5)|funct (6)|
I Type:|opcode (6)|rs (5)|rt (5)|immediate (16)|
J Type:|opcode (6)|address (26)|

X indicates this part of the instruction isnt used for the operation

Instruction:		opcodes:	funct:			details:
NOP			111111		XXXXXX			ALU Ouputs 0
ADD			000000		100100			Adds rs to rt and put result into rd, traps overflow
ADDU			000000		XXXXXX	
ADDI			001000		XXXXXX			Adds rs and immediate and puts result in rt
ADDIU			001001		XXXXXX
SUB			000000		100010
SUBU			000000		XXXXXX
MULT			000000		011000
DIV			000000		011010
AND			000000		100000
ANDI			001100		XXXXXX			Bitwise ANDS rs and immediate and puts result in rt
OR			000000		100101
ORI			001101		XXXXXX			Bitwise OR rs and immediate and puts result in rt
NOR			000000		100111			Bitwise NOR rs and rt and puts result into rd
XOR			000000		100110
XORI			001110		XXXXXX			Bitwise XOR rs and immediate and puts result in rt
SLL			000000		000000
SLA			000000		000001
SRL			000000		000010
SRA			000000		000011
BEQ			000100		XXXXXX			If rs == rt then pc+=immediate
BNE			000101		XXXXXX			If rs =/= rt then pc+=immediate
BGEZ			000001		XXXXXX			If rs >= 0 then pc+=immediate
BGTZ			000111		XXXXXX			If rs > 0 then pc+=immediate
BLEZ			000110		XXXXXX			If rs <= 0 then pc+=immediate
BLTZ			000001		XXXXXX			If rs > 0 then pc+=immediate
J			000010		XXXXXX			Unconditional Jump, doesnt save current pc count at $31
JAL			000011		XXXXXX			Unconditional Jump, saves pc count in $31.
JR			000000		001000			Unconditional Jump, jumps to the specified register rs, the rest are 0.





